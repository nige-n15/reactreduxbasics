{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/n1g3/Projects/streams/client/src/components/streams/StreamEdit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n} //mapStateToProps always passed 2 arguments \n// state - application state\n// ownProps - props passed to component\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/n1g3/Projects/streams/client/src/components/streams/StreamEdit.js"],"names":["React","Component","connect","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","formValues","console","log","componentDidMount","props","match","params","id","render","stream","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAM/BM,QAN+B,GAMnBC,UAAD,IAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,KAR8B;AAAA;;AAE/BG,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWT,WAAX,CAAuB,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAKFC,EAAAA,MAAM,GAAE;AACJ,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAuB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACJ;;AACD,wBACI;AAAA,8BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,eACC,QAAC,UAAD;AAAa,QAAA,QAAQ,EAAE,KAAKV;AAA5B;AAAA;AAAA;AAAA;AAAA,cADD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAnB+B,C,CAsBnC;AACA;AACA;;;AACA,MAAMW,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAEzC,SAAO;AAAEH,IAAAA,MAAM,EAAGE,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GAAP;AACH,CAHD;;AAKA,eAAgBb,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,WAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAqDE,UAArD,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends Component {\n\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) => {\n        console.log(formValues);\n    }\n   render(){\n       if (!this.props.stream){\n            return <div>Loading...</div>;\n       }\n       return (\n           <div><h3>Edit a Stream</h3>\n            <StreamForm  onSubmit={this.onSubmit} />\n            </div>\n        \n        );\n   }\n        \n}\n//mapStateToProps always passed 2 arguments \n// state - application state\n// ownProps - props passed to component\nconst mapStateToProps = (state, ownProps) => {\n    \n    return { stream : state.streams[ownProps.match.params.id] };\n};\n\nexport default  connect(mapStateToProps, { fetchStream,editStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}