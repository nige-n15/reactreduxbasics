{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/n1g3/Projects/streams/client/src/components/streams/StreamEdit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamEdit extends Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Edit Stream \", this.props.match.params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  }\n\n} //mapStateToProps always passed 2 arguments \n// state - application state\n// ownProps - props passed to component\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/n1g3/Projects/streams/client/src/components/streams/StreamEdit.js"],"names":["React","Component","connect","fetchStream","StreamEdit","componentDidMount","props","match","params","id","render","stream","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAE/BI,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWH,WAAX,CAAuB,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AACFC,EAAAA,MAAM,GAAE;AACJ,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAuB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACJ;;AACD,wBACC;AAAA,iCAAkB,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAGH;;AAZ+B,C,CAenC;AACA;AACA;;;AACA,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAEzC,SAAO;AAAEH,IAAAA,MAAM,EAAGE,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GAAP;AACH,CAHD;;AAKA,eAAgBP,OAAO,CAACU,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions'\n\nclass StreamEdit extends Component {\n\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n   render(){\n       if (!this.props.stream){\n            return <div>Loading...</div>;\n       }\n       return (\n        <div>Edit Stream {this.props.match.params.id}</div>\n        );\n   }\n        \n}\n//mapStateToProps always passed 2 arguments \n// state - application state\n// ownProps - props passed to component\nconst mapStateToProps = (state, ownProps) => {\n    \n    return { stream : state.streams[ownProps.match.params.id] };\n};\n\nexport default  connect(mapStateToProps, { fetchStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}