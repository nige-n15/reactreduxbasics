{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/n1g3/Projects/streams/client/src/components/streams/StreamEdit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass StreamEdit extends Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Edit Stream \", this.props.match.params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  }\n\n} //mapStateToProps always passed 2 arguments \n// state - application state\n// ownProps - props passed to component\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps)(StreamEdit);","map":{"version":3,"sources":["/home/n1g3/Projects/streams/client/src/components/streams/StreamEdit.js"],"names":["React","Component","connect","StreamEdit","componentDidMount","props","fetchStream","match","params","id","render","mapStateToProps","state","ownProps","stream","streams"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAE/BG,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AACFC,EAAAA,MAAM,GAAE;AACJ,wBACC;AAAA,iCAAkB,KAAKL,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAGH;;AAT+B,C,CAYnC;AACA;AACA;;;AACA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAEzC,SAAO;AAAEC,IAAAA,MAAM,EAAGF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACN,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GAAP;AACH,CAHD;;AAKA,eAAgBP,OAAO,CAACS,eAAD,CAAP,CAAyBR,UAAzB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass StreamEdit extends Component {\n\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n   render(){\n       return (\n        <div>Edit Stream {this.props.match.params.id}</div>\n        );\n   }\n        \n}\n//mapStateToProps always passed 2 arguments \n// state - application state\n// ownProps - props passed to component\nconst mapStateToProps = (state, ownProps) => {\n    \n    return { stream : state.streams[ownProps.match.params.id] };\n};\n\nexport default  connect(mapStateToProps)(StreamEdit);"]},"metadata":{},"sourceType":"module"}