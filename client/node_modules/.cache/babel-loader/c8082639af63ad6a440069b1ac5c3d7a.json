{"ast":null,"code":"import { formValues } from 'redux-form';\nimport streams from '../apis/streams';\nimport { CREATE_STREAM, SIGN_IN, SIGN_OUT, EDIT_STREAM, DELETE_STREAM, FETCH_STREAM, FETCH_STREAMS } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post('/streams', formValues);\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/stream/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/stream/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/stream/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/n1g3/Projects/streams/client/src/actions/index.js"],"names":["formValues","streams","CREATE_STREAM","SIGN_IN","SIGN_OUT","EDIT_STREAM","DELETE_STREAM","FETCH_STREAM","FETCH_STREAMS","signIn","userId","type","payload","signOut","createStream","dispatch","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,aAAT,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,WAA3C,EAAwDC,aAAxD,EAAuEC,YAAvE,EAAqFC,aAArF,QAAyG,SAAzG;AAEA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAER,OADH;AAEHS,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMU,YAAY,GAAGd,UAAU,IAAI,MAAMe,QAAN,IAAkB;AACxD,QAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,IAAR,CAAa,UAAb,EAAwBjB,UAAxB,CAAvB;AAEAe,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAET,aAAP;AAAsBU,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACmB,GAAR,CAAY,UAAZ,CAAvB;AACAL,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAEH,aAAP;AAAsBI,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMG,WAAW,GAAGC,EAAE,IAAI,MAAMP,QAAN,IAAkB;AAC/C,QAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACmB,GAAR,CAAa,WAAUE,EAAG,EAA1B,CAAvB;AACAP,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAEJ,YAAP;AAAqBK,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKtB,UAAL,KAAoB,MAAMe,QAAN,IAAkB;AAC5D,QAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACuB,GAAR,CAAa,WAAUF,EAAG,EAA1B,EAA6BtB,UAA7B,CAAvB;AACAe,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAEN,WAAP;AAAoBO,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AAClD,QAAMd,OAAO,CAACyB,MAAR,CAAgB,WAAUJ,EAAG,EAA7B,CAAN;AACAP,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAEL,aAAP;AAAsBM,IAAAA,OAAO,EAAEU;AAA/B,GAAD,CAAR;AACH,CAHM","sourcesContent":["import { formValues } from 'redux-form';\nimport streams from '../apis/streams';\nimport { CREATE_STREAM, SIGN_IN, SIGN_OUT, EDIT_STREAM, DELETE_STREAM, FETCH_STREAM, FETCH_STREAMS} from './types';\n\nexport const signIn = userId => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const createStream = formValues => async dispatch => {\n    const response = await streams.post('/streams',formValues);\n\n    dispatch({type: CREATE_STREAM, payload: response.data });\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams');\n    dispatch({type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = id => async dispatch => {\n    const response = await streams.get(`/stream/${id}`);\n    dispatch({type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.put(`/stream/${id}`, formValues);\n    dispatch({type: EDIT_STREAM, payload: response.data});\n};\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/stream/${id}`);\n    dispatch({type: DELETE_STREAM, payload: id});\n};"]},"metadata":{},"sourceType":"module"}