{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/n1g3/Projects/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.params.match.id);\n    w0000;\n  }\n\n  renderActions() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button negative\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"buton\", {\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"StreamDelete\", /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Delete Stream\",\n        content: \"Are you sure you want to delete this stream?\",\n        actions: this.renderActions(),\n        onDismiss: () => history.push('/')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    stream: state.streams\n  };\n};\n\nexport default connect(null, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/home/n1g3/Projects/streams/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","connect","history","fetchStream","StreamDelete","Component","componentDidMount","props","params","match","id","w0000","renderActions","render","push","mapStateToProps","state","stream","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAGA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AAEtCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBC,EAA/C;AAAmDC,IAAAA,KAAK;AAC3D;;AAEDC,EAAAA,aAAa,GAAE;AACX,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACQ;AAAA,8CAEI,QAAC,KAAD;AACI,QAAA,KAAK,EAAC,eADV;AAEI,QAAA,OAAO,EAAC,8CAFZ;AAGI,QAAA,OAAO,EAAE,KAAKD,aAAL,EAHb;AAII,QAAA,SAAS,EAAE,MAAMV,OAAO,CAACY,IAAR,CAAa,GAAb;AAJrB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAWH;;AA1BqC;;AA6B1C,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAEC,IAAAA,MAAM,EAAED,KAAK,CAACE;AAAhB,GAAP;AACH,CAFD;;AAIA,eAAejB,OAAO,CAAC,IAAD,EAAO;AAAEE,EAAAA;AAAF,CAAP,CAAP,CAA+BC,YAA/B,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\n\n\nclass StreamDelete extends React.Component{\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.params.match.id);w0000\n    }\n\n    renderActions(){\n        return (\n            <React.Fragment>\n                <button className=\"ui button negative\">Delete</button>\n                <buton className=\"ui button\">Cancel</buton>\n            </React.Fragment>\n        );\n    }\n    render(){\n        return (\n                <div>\n                    StreamDelete\n                    <Modal \n                        title=\"Delete Stream\"\n                        content=\"Are you sure you want to delete this stream?\"\n                        actions={this.renderActions()}\n                        onDismiss={() => history.push('/')}\n                    />\n                </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { stream: state.streams };\n};\n\nexport default connect(null, { fetchStream })(StreamDelete);"]},"metadata":{},"sourceType":"module"}