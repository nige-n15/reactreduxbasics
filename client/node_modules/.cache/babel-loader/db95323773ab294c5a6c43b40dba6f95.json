{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/n1g3/Projects/streams/client/src/components/streams/StreamCreate.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\n\nclass StreamCreate extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      //console.log(formProps);\n      //console.log(meta);\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          ...input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.onSubmit = formValues => {\n      this.props.createStream(formValues);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream\n})(formWrapped);","map":{"version":3,"sources":["/home/n1g3/Projects/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Component","Field","reduxForm","connect","createStream","StreamCreate","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","render","validate","errors","title","description","formWrapped","form"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAiBC,SAAjB,QAAkC,YAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAGA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAcjCM,WAdiC,GAcnB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAD,KAA4B;AACtC;AACA;AACA,YAAMC,SAAS,GAAI,SAAQD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6B,OAA7B,GAAuC,EAAI,EAAtE;AACA,0BACI;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA,gCACI;AAAA,oBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,YAAY,EAAC,KAApB;AAAA,aAA8BD;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGK,KAAKM,WAAL,CAAiBJ,IAAjB,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KAzBgC;;AAAA,SA2BjCK,QA3BiC,GA2BtBC,UAAU,IAAI;AACrB,WAAKC,KAAL,CAAWZ,YAAX,CAAwBW,UAAxB;AACH,KA7BgC;AAAA;;AAEjCF,EAAAA,WAAW,CAAC;AAACF,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAmB;AAC1B,QAAIA,OAAO,IAAID,KAAf,EAAqB;AACjB,0BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;AACJ;;AAoBDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKH;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAxCgC;;AA2CrC,MAAMI,QAAQ,GAAGH,UAAU,IAAI;AAC3B,QAAMI,MAAM,GAAG,EAAf;;AACA,MAAI,CAACJ,UAAU,CAACK,KAAhB,EAAsB;AAClBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACH;;AAED,MAAI,CAACL,UAAU,CAACM,WAAhB,EAA6B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACH;;AACD,SAAOF,MAAP;AACH,CAVD;;AAaA,MAAMG,WAAW,GAAGpB,SAAS,CAAC;AAC1BqB,EAAAA,IAAI,EAAE,cADoB;AAE1BL,EAAAA;AAF0B,CAAD,CAAT,CAGjBb,YAHiB,CAApB;AAKA,eAAeF,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAgCkB,WAAhC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Field , reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\n\n\nclass StreamCreate extends Component {\n    \n    renderError({error, touched}) {\n        if (touched && error){\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">\n                        {error}\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        //console.log(formProps);\n        //console.log(meta);\n        const className = `field ${meta.error && meta.touched ? 'error' : '' }`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input autoComplete=\"off\" {...input} />\n                {this.renderError(meta)}\n            </div>\n            );\n    }\n\n    onSubmit = formValues => {\n        this.props.createStream(formValues);\n    };\n\n    \n    render() {\n        return (\n            <div>\n                <h3>Create Stream</h3>\n                <StreamForm onSubmit={this.onSubmit}/>\n            </div>\n        )\n        \n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n    if (!formValues.title){\n        errors.title = 'You must enter a title';\n    }\n\n    if (!formValues.description) {\n        errors.description = 'You must enter a description';\n    }\n    return errors;\n}\n\n\nconst formWrapped = reduxForm({\n    form: 'streamCreate',\n    validate\n})(StreamCreate);\n\nexport default connect(null, { createStream })(formWrapped);"]},"metadata":{},"sourceType":"module"}